//! Переменные var, let, const

//! Переменные var устаревшее, у неё есть хостинг(всплытие), создается до того как наш скрипт начал работать
number = 5;
var number = 3;

var number = 3; //? создали (обьявили) переменную и поместили в неё данные
number = 5; //? перезаписали переменную

//! Переменные let создали переменную, только потом её можно использовать
let numb = 10;
numb = 15;

const pi = 3.14;

let message; //? создали (обьявили) переменную
message = 'Hello!'; //? поместили в неё данные исользуя оператор присваивания =

// ?показывает содержимое переменной
//* alert(message);

let myName = 'Ivan';
let bul = true; //? логический тип, булевые значения

//? nul это когда чего то просто не существует, переменная не обьявлена
modal = 'string';
alert(a);

//? undefined это когда существует, но значения не имеет
let modall;

//? Обьекты состоят из свойств (модель, вес, мощность) и методов ( то что умеет делать, пылесос – пылесосить)
let obj = {
  dog: 'Martin', //? Свойство (описание обьекта)
  cat: 'Tim',
};

//? Массивы - частый случай обьектов, конструкция которая позволяет записать данные строго по порядку
let arr = [1, 'str', false];
arr = [0]; //? получить первый элемент
arr[0] = 2; //? перезаписали первый элемент в массиве

let age = 29;
console.log(age); //? выводим в консоль, смотрим что находиться в переменной modal

console.log(4 / 0); //? прощает ошибки которые мы допустили в коде Infinity бесконечость
console.log('string' * 9); //? получаем не математические действия  NaN

//? = знак присваивания
//? == знак равенства, сравнение
//? === более строгое стравнение, сравниванием также по типу данных

console.log(2 + 2 == 4); //? будет true
console.log(2 + 2 === 4); //? будет true
console.log(2 + '2' === 4); //? будет false (2 + '2' будет 22) сравниванием строку и число
console.log('4' == 4); //? будет true, значения равны но типы данных разные
console.log('4' === 4); //? будет false, потому что сравнивается также по типу данных
console.log(4 + '4'); //? произойдёт конкетинация - это сложение двух строк, будет 44

//! Если мы что то складываем со со сторокой, то всё наше выражение превращается в строку

//? Инкримент
//? Дикримент

let x = 5; //? создали перменную х котороя равна 5

x = x + 1; //? в будущем хочу увеличить эту переменную на 1, первый способ
x += 1; //? второй способ
x++; //? ++ знак инкремент, увеличивает значение переменной на 1
x--; //? -- знак декримент, уменьшает значение переменной на 1

//!Методы взаимодействия с пользователем

//? 1-й метод console.log
console.log(x);

//? 2-й метод alert
//* alert(1);

//? 3-й метод confirm. Тут будет вопрос на который есть двухзначный ответ, либо да либо нет
confirm('Вам есть 18 лет?');

//? Можем этот ответ сохранить и использовать в будущем
//? Создадим коробку answer, сначала выполняется вопрос к пользователю, после того как он ответил, ответ помещается в переменную answer
let answer = confirm('Вам есть 18 лет?');
console.log(answer);

//? 4-й метод prompt
let answerr = prompt('Вам есть 18 лет?', ''); //? Позволяет написать текст в модальное окно
console.log(answerr);

//? Создаем переменную (коробку) answers и создаем в ней массив, и теперь этот массив я хочу наполнить данными, данные идут строго по порядку.Берем переменную answers и говорим что в ней есть элемент под номером 0,1,2. В этот элемент я хочу поместить ответ от пользователя

let answers = [];
answers[0] = prompt('Как ваше имя?', '');
answers[1] = prompt('Как ваша фамилия?', '');
answers[2] = prompt('Сколько ва лет?', '');

document.write(answers); //? Позволяет выводить на экран информации с ячеек