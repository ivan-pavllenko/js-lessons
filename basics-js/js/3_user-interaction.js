"use strict";
//!Методы взаимодействия с пользователем

//? 1-й метод команда alert - используется для того чтобы пользователя о чём о важном предупредить
// alert('Hello');

//? 2-й метод команда confirm - позволяет пользователя спросить о чём то, тут будет вопрос на который есть двухзначный ответ, либо да либо нет
//? Можем этот ответ сохранить и использовать в будущем
//? Создадим коробку result, сначала выполняется вопрос к пользователю, после того как он ответил, ответ помещается в переменную result
// const result = confirm('Are you here?');
// console.log(result);

//? 3-й метод команда prompt - позволяет написать текст в модальное окно
//? '18' используются для того чтобы мы могли подставить дефолтный ответ, placeholder
const answer = prompt('Вам есть 18 лет?', '18');
console.log(answer);
console.log(typeof (answer));

//! Что бы пользователь не ответил тип данных answer будет строка  
//? typeof - оператор который может проверить тип данных    
//? Один тип данных можно преобразовывать в другой

//? оператор + позволяет преобразовать строку в число, получаем число number  
const answerr = +prompt('Вам есть 18 лет?', '18');
console.log(answerr + 5); //? ввели 10, будет 15. 
//? Без + будет 105, слаживается строка + число

//? Создаем переменную (коробку) answers и создаем в ней массив, и теперь этот массив я хочу наполнить данными, данные идут строго по порядку
//? Берем переменную answers и говорим что в ней есть элемент под номером 0,1,2. В этот элемент я хочу поместить ответ от пользователя

const answers = [];
answers[0] = prompt('Как ваше имя?', '');
answers[1] = prompt('Как ваша фамилия?', '');
answers[2] = prompt('Сколько ва лет?', '');

document.write(answers); //? Позволяет выводить на экран информации с ячеек

console.log(typeof (answers)); //? позволяет узнать какой тип данных answers, выведит object
//? Позволяет увидить что массив это не отдельый тип данных, а частный случай обьектов

//! Ошибки в самом js - официально признаная ошибка
//? Если мы попытаемся вывести какой тип данных у null будет выведит object, хотя это не так
console.log(typeof (null));

//? Команды alert, prompt, confirm существуют только в браузере, в консоли запустить нельзя


//! Интерполяция - прямо во внутрь строки можем вставлять значение переменной

const category = 'toys';
//? сформируем url путь, по которому будет переходить пользователь либо куда будет посылаться какой то запрос
//? Конкетинация строк - мы берем один кусок строки https://someurl.com/' и к нему приклеиваем кусок строки toys
//? Разростается строка и выглядит не красиво и приходиться везде использовать + 
//? Для того чтобы эт не делать был придуман приём интерполяции - использование бектиков ``

console.log('https://someurl.com/' + category + '/' + '4'); //? старый вариант

console.log(`https://someurl.com/${category}/4`); //? новый вариант, используем бектики

const user = 'Ivan';
alert(`Hello, ${user}`);