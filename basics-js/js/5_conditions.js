//! Условия

//? if() в скобках мы запишем то условие которое будем проверять
//? {} в скобках действие которое выполнится, если условие пройдет
//? Если условие if (age > 18) не выполнелось то выполниться else {}

let age = prompt('Сколько вам лет?', '');
if (age > 18) {
  alert('Вы можете войти');
} else {
  alert('Рановато ещё');
}

//? Можно выстраивать целую цепочку условий

let ages = prompt('Сколько вам лет?', '');
if (age < 18) {
  alert('Рановато ещё');
} else if (ages > 100) {
  alert('Поздновато уже');
} else {
  alert('Вы можете войти');
}

//? switch case позволяет записать условие более элегантней, 
//? Не может проверять условные вещи '>' либо '<'. Здесь мы проверяем на строгое соответствие
//? default: если значения не совпадают с другими ни 18 ни 100 а другое. Выполниться только тогда когда другие кейсы не выполнятся

let agee = prompt('Сколько вам лет?', '');
switch (agee) {
  case '18':
    alert('Вы можете войти');
    break;

  case '100':
    alert('Поздновато уже');
    break;

  default:
    alert('Значение не известно');
    break;
}

//!Запомнить
//? Вся информация которая получается от пользователя будет типом данных строка, даже если мы ввели туда число
//? switch проверяет на строгое соотвествие === по типу данных. 
//? Мы должны записать информацию в виде строки, не case 18 а case '18'

if (4 == 9) {
  console.log('Ok!');
} else {
  console.log('Error');
}

//? Условие в круглых () должно быть преобразовано к булиновому значению - либо правда либо ложь 
//? Условия превращают любой тип данных в булиновый чтобы проверить правдивость

const num = 50;

if (num < 49) {
  console.log('Error');
} else if (num > 100) {
  console.log('Many');
} else {
  console.log('Ok!');
}

//? Запись синтексиса при помощи тернарного оператора

const numb = 50;
(numb === 50) ? console.log('Ok!'): console.log('Error');

//? Сначала идет условие что (num === 50), 
//? если это условие верно, то мы выполняем действие console.log('Ok!')
//? если это условие не верно, то мы выполняем действие console.log('Error')

//? Оперот наз тернарный потому-что в его работе используются аж 3 аргумента 
//? 4 + 4; + здесь есть бинарным аргументом  
//?  +'4'; + здесь есть унарным, превращает строку в число  

const number = 50;

switch (number) {
  case 49:
    console.log('Неверно');
    break;

  case 100:
    console.log('Неверно');
    break;

  case 50:
    console.log('Верно');
    break;

  default:
    alert('Не в этот раз');
    break;
}